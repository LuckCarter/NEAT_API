{"version":3,"sources":["../../src/controllers/user.controller.js"],"names":["User","require","bcrypt","userValidationSchema","exports","create","req","res","err","validation","validate","body","error","status","send","hashedPassword","hashSync","password","user","email","firstname","lastname","address","phone","admin","save","then","data","message","findAll","find","users","findById","_id","params","id","findByIdAndUpdate","findByIdAndRemove","findByIdAndDelete"],"mappings":"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","sourcesContent":["const User = require('../models/user.model');\nconst bcrypt = require('bcrypt');\nconst userValidationSchema = require(\"../utils/validators/user.validation\");\n\nexports.create = (req, res, err) => {\n    const validation = userValidationSchema.validate(req.body);\n\n    if (validation.error) {\n        return res.status(400).send(validation.error);\n    }\n\n    let hashedPassword = bcrypt.hashSync(req.body.password, 8);\n\n    const user = new User({\n        email: req.body.email,\n        password: hashedPassword,\n        firstname: req.body.firstname,\n        lastname: req.body.lastname,\n        address: req.body.address,\n        phone: req.body.phone,\n        admin: false,\n    });\n\n    user.save()\n        .then(data => {\n            res.send(data);\n        })\n        .catch(err => {\n            res.status(500).send({\n                message: err.message\n            })\n        })\n};\n\nexports.findAll = (req, res) => {\n    User.find()\n        .then(users => {\n            res.send(users);\n        })\n        .catch(err => {\n            res.status(500).send({\n                message: err.message || \"An error has occurred while fetching all users.\"\n            })\n        })\n};\n\nexports.findById = (req, res) => {\n    User.findById(_id = req.params.id)\n        .then(user => {\n            res.send(user)\n        })\n        .catch(err => {\n            res.status(500).send({\n                message: err.message || \"An error has occurred while fetching the user.\"\n            })\n        })\n};\n\nexports.findByIdAndUpdate = (req, res) => {\n    if(req.body.password) req.body.password = bcrypt.hashSync(req.body.password, 8);\n\n    User.findByIdAndUpdate(req.params.id, req.body, { new: true })\n    .then(user => {\n        res.send(user)\n    })\n    .catch(err => {\n        res.status(500).send({\n            message: err.message || \"An error has occurred while updating the user.\"\n        })\n    })\n};\n\nexports.findByIdAndRemove = (req, res) => {\n    User.findByIdAndDelete(req.params.id)\n    .then(user => {\n        res.send(user);\n    })\n    .catch(err => {\n        res.status(500).send({\n            message: err.message || \"An error has occurred while deleting the user.\"\n        })\n    })\n};"],"file":"user.controller.js"}